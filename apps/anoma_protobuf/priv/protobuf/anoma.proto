
syntax = "proto3";

package Anoma.Protobuf;

import "nock/prove.proto";
import "nock/run.proto";
import "intents/list_intents.proto";
import "intents/add_intent.proto";
import "indexer/nullifiers.proto";
import "indexer/unrevealed_commits.proto";
import "indexer/unspent_resources.proto";

service NockService {
  rpc Prove(Anoma.Protobuf.Nock.Prove.Request)
      returns (Anoma.Protobuf.Nock.Prove.Response) {}

  rpc Run(Anoma.Protobuf.Nock.Run.Request)
      returns (Anoma.Protobuf.Nock.Run.Response) {}
}

service IntentsService {
  rpc ListIntents(Anoma.Protobuf.Intents.List.Request)
      returns (Anoma.Protobuf.Intents.List.Response) {}

  rpc AddIntent(Anoma.Protobuf.Intents.Add.Request)
      returns (Anoma.Protobuf.Intents.Add.Response) {}
}

service IndexerService {
  rpc ListNullifiers(Anoma.Protobuf.Indexer.Nullifiers.Request)
      returns (Anoma.Protobuf.Indexer.Nullifiers.Response) {}

  rpc ListUnrevealedCommits(Anoma.Protobuf.Indexer.UnrevealedCommits.Request)
      returns (Anoma.Protobuf.Indexer.UnrevealedCommits.Response) {}

  rpc ListUnspentResources(Anoma.Protobuf.Indexer.UnspentResources.Request)
      returns (Anoma.Protobuf.Indexer.UnspentResources.Response) {}
}

// // ----------------- Services -----------------
// service Intents {
//   rpc ListIntents(IntentPool.ListIntents.Request)
//       returns (IntentPool.ListIntents.Response) {}

//   rpc AddIntent(IntentPool.AddIntent.Request)
//       returns (IntentPool.AddIntent.Response) {}

//   rpc ListNullifiers(Indexer.Nullifiers.Request)
//       returns (Indexer.Nullifiers.Response) {}

//   rpc ListUnrevealedCommits(Indexer.UnrevealedCommits.Request)
//       returns (Indexer.UnrevealedCommits.Response) {}

//   rpc ListUnspentResources(Indexer.UnspentResources.Request)
//       returns (Indexer.UnspentResources.Response) {}

//   rpc Prove(Prove.Request) returns (Prove.Response) {}
//   rpc RunNock(RunNock.Request) returns (RunNock.Response) {}
// }

// // ----------------- RunNock -----------------------

// message RunNock {
//   message Request {
//     oneof program {
//       bytes jammed_program = 1;
//       string text_program = 2;
//     }

//     repeated Input inputs = 3;
//   }

//   message Response {
//     oneof result {
//       bytes output = 1;
//       string error = 2;
//     }
//   }
// }
// // ----------------- Intent Pool -----------------

// message Intent { int32 value = 1; }
// /*
// Intent pool requests
// */
// message IntentPool {
//   message AddIntent {
//     message Request { Intent intent = 1; }
//     message Response { string result = 1; }
//   }

//   message ListIntents {
//     message Request {}

//     message Response {
//       repeated string intents = 1; // a list of intents.
//     }
//   }
// }

// // ----------------- Indexer -----------------
// message Indexer {
//   message Nullifiers {
//     message Request {}

//     message Response {
//       repeated string nullifiers = 1; // a list of intents.
//     }
//   }

//   message UnrevealedCommits {
//     message Request {}

//     message Response {
//       repeated string commits = 1; // a list of intents.
//     }
//   }

//   message UnspentResources {
//     message Request {}

//     message Response {
//       repeated string unspent_resources = 1; // a list of intents.
//     }
//   }
// }

// // ----------------- Mempool -----------------

// /*
// Intent pool requests
// */
// message MemPool {
//   message Dump {
//     message Request {}

//     message Response {
//       repeated string dumps = 1; // a list of intents.
//     }
//   }
// }

// // ----------------- Intent Pool -----------------

// /*
// The envelope holds any message that can be sent or received by nodes.

// The envelope is required because the encoder can only encode 1 type of
// message.
// */
// message Envelope {
//   NodeInfo sender_info = 1; // node information of the sender.
//   bytes message_id = 2;     // the message id.

//   oneof inner_message {
//     // announcement
//     Announcement announcement = 3;
//     // list intents
//     IntentPool.ListIntents.Request list_intents_request = 4;
//     IntentPool.ListIntents.Response list_intents_response = 5;

//     IntentPool.AddIntent.Request add_intent_request = 6;
//     IntentPool.AddIntent.Response add_intent_response = 7;

//     Indexer.Nullifiers.Request nullifiers_request = 8;
//     Indexer.Nullifiers.Response nullifiers_response = 9;

//     Indexer.UnrevealedCommits.Request unrevealed_commits_request = 10;
//     Indexer.UnrevealedCommits.Response unrevealed_commits_response = 11;

//     Indexer.UnspentResources.Request unspent_resources_request = 12;
//     Indexer.UnspentResources.Response unspent_resources_response = 13;

//     // mempool dump
//     MemPool.Dump.Request mempool_dump_request = 14;
//     MemPool.Dump.Response mempool_dump_response = 15;
//   }
// }

# This action runs on the code base for every new pull request that is goig to be merged into base.

# The action is divided into four jobs:

#   - Compile the deps and program for the different mix environments.
#   - Run linting jobs on the code base (credo, formatting, dialyzer, and whitespace check).
#   - Run the test suite against the code base.

name: Push

run-name: Push to ${{ github.ref_name }}

on: [push]

jobs:
  #-----------------------------------------------------------------------------
  # Merge the current branch into the `next` branch.
  try_merge:
    name: try merge into next
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: Check out the repository to the runner
        uses: actions/checkout@v4

      # try merge with next
      - uses: ./.github/workflows/tasks/try_merge
        with:
          merge_into: "main"

  #-----------------------------------------------------------------------------
  # Compile the code base for the different mix environments
  # and cache the output of the _build and deps directories.

  compile:
    name: compile code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mix_env: ["prod", "dev", "test"]
    steps:
      # checkout the repo
      - name: Check out the repository to the runner
        uses: actions/checkout@v4
      # compile the code for all mix environments
      - uses: ./.github/workflows/tasks/compile
        with:
          mix_env: ${{ matrix.mix_env }}

  #-----------------------------------------------------------------------------
  # Run linting jobs on the code base.
  # This includes credo, formatting, trailing whitespaces, and dialyzer.
  # Reuses the cache from above, and updates the cache when the job is done.

  lint:
    needs: [compile]
    name: lint codebase
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: Check out the repository to the runner
        uses: actions/checkout@v4

      # run the lint jobs
      - uses: ./.github/workflows/tasks/lint
        with:
          mix_env: "dev"


  #-----------------------------------------------------------------------------
  # Run the test suite against the code base.

  test:
    needs: [compile]
    name: run tests
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: Check out the repository to the runner
        uses: actions/checkout@v4

      # run the lint jobs
      - uses: ./.github/workflows/tasks/test

  # #-----------------------------------------------------------------------------
  # # Generate the documentation of the code base.

  # docs:
  #   needs: [compile]
  #   name: compile docs
  #   strategy:
  #     matrix:
  #       mix_env: ["dev"]
  #   runs-on: ubuntu-latest
  #   steps:
  #     # checkout the repo
  #     - name: Check out the repository to the runner
  #       uses: actions/checkout@v4

  #     # install os deps
  #     - uses: ./.github/workflows/os_dependencies

  #     # install erlang/elixir/protobuf
  #     - uses: ./.github/workflows/elixir_setup

  #     # setup build cache
  #     - uses: ./.github/workflows/cache
  #       with:
  #         os: ${{ runner.os }}
  #         mix_env: ${{ matrix.mix_env }}
  #         paths: |
  #           ${{ github.workspace }}/deps
  #           ${{ github.workspace }}/_build

  #     # run mix docs
  #     - run: make docs-release
  #     # run the makefile docs
  #     - run: make docs-release

  # #-----------------------------------------------------------------------------
  # # Publish the docs on Github Pages

  # publish_docs:
  #   needs: [docs]
  #   name: publish docs on github pages
  #   strategy:
  #     matrix:
  #       mix_env: ["dev"]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     id-token: write
  #     pages: write
  #   steps:
  #     # checkout the repo
  #     - name: Check out the repository to the runner
  #       uses: actions/checkout@v4

  #     # install os deps
  #     - uses: ./.github/workflows/os_dependencies

  #     # install erlang/elixir/protobuf
  #     - uses: ./.github/workflows/elixir_setup

  #     # setup build cache
  #     - uses: ./.github/workflows/cache
  #       with:
  #         os: ${{ runner.os }}
  #         mix_env: ${{ matrix.mix_env }}
  #         paths: |
  #           ${{ github.workspace }}/deps
  #           ${{ github.workspace }}/_build

  #     # todo: this should not be run again
  #     # run mix docs
  #     - run: make docs-release

  #     # deploy the docs on github pages
  #     - name: Setup Pages
  #       uses: actions/configure-pages@v5

  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v3
  #       with:
  #         path: './doc'

  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4

  # #-----------------------------------------------------------------------------
  # # Publish the docs on Github Pages

  # build_releases:
  #   needs: [publish_docs,test,lint]
  #   name: build the releases
  #   strategy:
  #     matrix:
  #       mix_env: ["prod"]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     # checkout the repo
  #     - name: Check out the repository to the runner
  #       uses: actions/checkout@v4

  #     # install os deps
  #     - uses: ./.github/workflows/os_dependencies

  #     # install erlang/elixir/protobuf
  #     - uses: ./.github/workflows/elixir_setup

  #     # setup build cache
  #     - uses: ./.github/workflows/cache
  #       with:
  #         os: ${{ runner.os }}
  #         mix_env: ${{ matrix.mix_env }}
  #         paths: |
  #           ${{ github.workspace }}/deps
  #           ${{ github.workspace }}/_build

  #     # build the release binaries
  #     - uses: ./.github/workflows/build_release

  #     # build the release binaries
  #     - uses: ./.github/workflows/github_release
  #       with:
  #         release_name: ${{ github.ref_name }}
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

name: Build and run tests

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  clippy:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        toolchain: [ nightly-2022-05-20 ]
        make:
          - name: Clippy
            command: clippy
            cache_subkey: clippy
          - name: Clippy ABCI++
            command: clippy-abci-plus-plus
            cache_subkey: clippy-abci
            
    env:
      CARGO_INCREMENTAL: 0

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: wasm32-unknown-unknown
          profile: default
          override: true
      - name: Cache cargo
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ./target
            ./wasm/tx_template/target
            ./wasm/vp_template/target
            ./wasm_for_tests/wasm_source/target
          key: ${{ runner.os }}-${{ matrix.make.cache_subkey }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.make.cache_subkey }}-cargo-
      - name: Rustup check
        run: rustup show
      - name: "${{ matrix.make.name }}"
        run: make {{ matrix.make.command }}
      - name: Clean cache folder
        run: | 
            cargo install cargo-cache --no-default-features --features ci-autoclean cargo-cache
            cargo-cache
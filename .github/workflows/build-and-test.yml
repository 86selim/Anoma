name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build-wasm:
    runs-on: ${{ matrix.os }}
    container:
      image: ghcr.io/fraccaman/anoma:wasm-0.6.1
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        wasm_cache_version: ["v1"]
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Show rust toolchain info
        run: rustup show
      - name: Build WASM
        run: cp wasm/checksums.json wasm/original-checksums.json && make build-wasm-scripts
      - name: Upload wasm artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: |
            wasm/tx_*.wasm
            wasm/vp_*.wasm
            wasm/checksums.json
      - name: Test Wasm
        run: make test-wasm
      - name: Check wasm up-to-date
        run: cmp -- wasm/checksums.json wasm/original-checksums.json
  
  anoma:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        nightly_version: [nightly-2022-05-20]
        anoma_cache_version: ["v1"]

    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 20G
      SCCACHE_DIR: /home/runner/.cache/sccache

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install sccache (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.13
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH          
      - name: Install sccache (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sccache
      - name: Setup rust toolchain
        uses: oxidecomputer/actions-rs_toolchain@ad3f86084a8a5acf2c09cb691421b31cf8af7a36
        with:
          target: wasm32-unknown-unknown
          profile: default
          override: true
      - name: Setup rust nightly
        uses: oxidecomputer/actions-rs_toolchain@ad3f86084a8a5acf2c09cb691421b31cf8af7a36
        with:
          toolchain: ${{ matrix.nightly_version }}
          target: wasm32-unknown-unknown
          profile: default
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git          
          key: ${{ runner.os }}-${{ matrix.anoma_cache_version }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-anoma-${{ matrix.anoma_cache_version }}-cargo-
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /home/runner/.cache/sccache
          key: ${{ runner.os }}-anoma-${{ matrix.anoma_cache_version }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-anoma-${{ matrix.anoma_cache_version }}-sccache-
      - name: Build
        run: make build
      - name: Build test
        run: make build-test
      # - name: Wait for wasm artifacts
      #   uses: lewagon/wait-on-check-action@v1.0.0
      #   with:
      #     ref: ${{ github.ref }}
      #     check-name: Upload wasm artifacts
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     wait-interval: 120
      - name: Download wasm artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}
          path: ./wasm
      - name: Run unit test
        run: make test-unit
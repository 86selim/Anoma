name: build the release binaries
description: build the release binaries
inputs:
  release_name:
    description: "The name of the release"
    required: true
  github_token:
    description: "The github token"
    required: true

runs:
  using: "composite"
  steps:
    #---------------------------------------------------------------------------
    # Create the release on GitHub
    - name: ensure that the release does not exist yet
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      shell: bash
      run: |
        RELEASE=$(gh release list --repo anoma/anoma --json name | jq '.[] | select(.name == "${{ inputs.release_name }}") | .name') \
        test -z "${RELEASE}"

    - name: create the release on github
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      shell: bash
      run: |
        gh release create ${{ inputs.release_name }} \
          --title ${{ github.ref_name }}             \
          --repo ${{ github.repository }}            \

    # #---------------------------------------------------------------------------
    # # Anoma Client binary
    # - name: build the anoma client release
    #   shell: bash
    #   run: |
    #     MIX_ENV=prod mix do --app anoma_client escript.build

    # #---------------------------------------------------------------------------
    # # Publish releases
    # - name: publish client release
    #   shell: bash
    #   env:
    #     GH_TOKEN: ${{ inputs.github_token }}
    #   run: |
    #     gh release upload ${{ inputs.release_name }} \
    #     apps/anoma_client/anoma_client

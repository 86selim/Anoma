name: Pull Request

on:
  pull_request:
    branches: [ "base" ]

permissions:
  contents: read

jobs:
  all:
    strategy:
      matrix:
        check: [test, dialyzer, format]
        revision: [${{ github.event.pull_request.head.sha }}]
    runs-on: ubuntu-latest
    steps:
    - name: Check out source
      uses: actions/checkout@v4.1.0
      with:
        ref: ${{ matrix.revision }}
    - name: Set up Elixir
      id: beam
      uses: erlef/setup-beam@v1.16.0
      with:
        elixir-version: '1.15.6'
        otp-version: '26.1.2'
    - name: Restore dependencies cache
      if: matrix.check != format
      uses: actions/cache@v3.3.2
      with:
        path: deps
        key: |
          mix-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          mix-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
    - name: Install dependencies
      if: matrix.check != format
      run: mix deps.get
    - name: Restore PLT cache
      id: plt_cache
      if: matrix.check == dialyzer
      uses: actions/cache/restore@v3.3.2
      with:
        path: plts
        key: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
    - name: Create PLTs
      if: matrix.check == dialyzer && steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt
    - name: Save PLT cache
      if: matrix.check == dialyzer
      uses: actions/cache/save@v3.3.2
      if: steps.plt_cache.outputs.cache-hit != 'true'
      with:
        path: plts
        key: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
    - name: Run tests
      if: matrix.check == test
      run: mix test
    - name: Run dialyzer
      if: matrix.check == dialyzer
      run: mix dialyzer --format github
    - name: Format check
      if: matrix.check == format
      run: mix format --check-formatted
